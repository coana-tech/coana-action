#!/bin/sh -l

APIKEY=$1
PROJECT_PATH=$2
DEBUG=$3
UPLOAD_REPORT_ARTIFACT=$4
REPO_URL=$5
PROJECT_NAME=$6
TIMEOUT=$7
EXCLUDE_DIRS=$8
MEMORY_LIMIT=$9

if [ -z "$APIKEY" ]; then
    echo "apiKey input cannot be empty"
    exit 1
fi

COMMAND="coana run $PROJECT_PATH --api-key $APIKEY"

if [ -z "$REPO_URL"  ] && [ -z "$PROJECT_NAME" ]; then
    echo "either repoUrl or projectName is required"
    exit 1
fi

if [ "$DEBUG" = "true" ]; then
    COMMAND="$COMMAND --debug"
fi

if [ "$UPLOAD_REPORT_ARTIFACT" = "true" ]; then
    COMMAND="$COMMAND --write-report-to-file"
fi

# Check each optional argument and append to command if they're provided
if [ ! -z "$REPO_URL" ]; then
    COMMAND="$COMMAND --repo-url $REPO_URL"
fi

if [ ! -z "$PROJECT_NAME" ]; then
    COMMAND="$COMMAND --project-name $PROJECT_NAME"
fi

if [ ! -z "$TIMEOUT" ]; then
    COMMAND="$COMMAND --timeout $TIMEOUT"
fi

if [ ! -z "$EXCLUDE_DIRS" ]; then
    COMMAND="$COMMAND --exclude-dirs $EXCLUDE_DIRS"
fi

if [ ! -z "$MEMORY_LIMIT" ]; then
    COMMAND="$COMMAND --memory-limit $MEMORY_LIMIT"
fi


# Set the safe directory to the current working directory
# Prevents the '# Prevents the "fatal: detected dubious ownership in repository at '/github/workspace'" error
sh -c "git config --global --add safe.directory $PWD"

# Execute the command
eval "$COMMAND"

